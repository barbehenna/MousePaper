source('~/Documents/MousePaper/mouse.r')
## ---- Extra Libraries ---------
library(doParallel)
library(foreach)
library(raster)
library(reshape2)
library(ggplot2)
library(nortest)
## ----- Alton's simulation ----
d <- 1 #mice/m^2
ts <- 1.5 #m
fs <- 7*ts+5 #m
np <- as.integer(d*fs*fs) #mice
nv <- 4
delta <- 0.5
if (delta > ts/2) {
stop("Something weird may happen with this run becuase a mouse can be caught by two traps in the same forage")
}
rings <- c(4,4,4,4,4,4,4,4,
4,3,3,3,3,3,3,4,
4,3,2,2,2,2,3,4,
4,3,2,1,1,2,3,4,
4,3,2,1,1,2,3,4,
4,3,2,2,2,2,3,4,
4,3,3,3,3,3,3,4,
4,4,4,4,4,4,4,4)
iter = 10000
cores=detectCores()
start_time <- Sys.time()
cl <- makeCluster(cores-1)
registerDoParallel(cl)
Catches <- rep(0, times = 64)
Catches <- matrix(Catches, nrow = 8, ncol = 8)
Catches <- foreach(i=1:iter, .combine = '+') %dopar% {
tmp <- oneRun(print = TRUE)
tmp
}
stopCluster(cl)
Sys.time() - start_time
r <- raster(xmn = 0, xmx = 8, ymn = 0, ymx = 8, nrows = 8, ncols = 8)
r[] <- Catches
plot(r)
Catches
mice <- melt(Catches)
names(mice) <- c("row", "col", "count")
mice$ring <- factor(rings)
plt <- ggplot(data = mice) + geom_density(mapping = aes(x=count, colour=ring))
plt
iter = 100000
cores=detectCores()
start_time <- Sys.time()
cl <- makeCluster(cores-1)
registerDoParallel(cl)
Catches <- rep(0, times = 64)
Catches <- matrix(Catches, nrow = 8, ncol = 8)
Catches <- foreach(i=1:iter, .combine = '+') %dopar% {
tmp <- oneRun(print = TRUE)
tmp
}
stopCluster(cl)
Sys.time() - start_time
r <- raster(xmn = 0, xmx = 8, ymn = 0, ymx = 8, nrows = 8, ncols = 8)
r[] <- Catches
plot(r)
Catches
mice <- melt(Catches)
names(mice) <- c("row", "col", "count")
mice$ring <- factor(rings)
plt <- ggplot(data = mice) + geom_density(mapping = aes(x=count, colour=ring))
plt
qqnorm(mice$count[mice$ring==1])
qqline(mice$count[mice$ring==1], col=2)
shapiro.test(mice$count[mice$ring==1]) #Null: dist is normal
qqnorm(mice$count[mice$ring==2])
qqline(mice$count[mice$ring==2], col=2)
shapiro.test(mice$count[mice$ring==2]) #Null: dist is normal
lillie.test(mice$count[mice$ring==2]) #Null: dist is normal (must be more than 4 samples)
qqnorm(mice$count[mice$ring==3])
qqline(mice$count[mice$ring==3], col=2)
shapiro.test(mice$count[mice$ring==3]) #Null: dist is normal
lillie.test(mice$count[mice$ring==3]) #Null: dist is normal
qqnorm(mice$count[mice$ring==4])
qqline(mice$count[mice$ring==4], col=2)
shapiro.test(mice$count[mice$ring==4]) #Null: dist is normal
lillie.test(mice$count[mice$ring==4]) #Null: dist is normal
rings <- c(7,6,4,4,4,4,6,7,
6,5,3,3,3,3,5,6,
4,3,2,2,2,2,3,4,
4,3,2,1,1,2,3,4,
4,3,2,1,1,2,3,4,
4,3,2,2,2,2,3,4,
6,5,3,3,3,3,5,6,
7,6,4,4,4,4,6,7)
r <- raster(xmn = 0, xmx = 8, ymn = 0, ymx = 8, nrows = 8, ncols = 8)
r[] <- Catches
plot(r)
Catches
mice <- melt(Catches)
names(mice) <- c("row", "col", "count")
mice$ring <- factor(rings)
plt <- ggplot(data = mice) + geom_density(mapping = aes(x=count, colour=ring))
plt
for (i in unique(as.numeric(mice$ring))) {
print(shapiro.test(mice$count[mice$ring==i]))
}
for (i in unique(as.numeric(mice$ring))) {
print(i, shapiro.test(mice$count[mice$ring==i]))
}
for (i in unique(as.numeric(mice$ring))) {
print(as.numeric(i), shapiro.test(mice$count[mice$ring==i]))
}
for (i in unique(as.numeric(mice$ring))) {
print(i)
print(shapiro.test(mice$count[mice$ring==i]))
}
str(shapiro.test(mice$count[mice$ring==4]))
shapiro.test(mice$count[mice$ring==4])$p.value
for (i in unique(as.numeric(mice$ring))) {
print(i)
print(shapiro.test(mice$count[mice$ring==i])$p.value)
}
plot(density(mice$count[mice$ring==2]))
plot(density(mice$count[mice$ring==3]))
mice$ring
levels(mice$ring)
as.numeric(levels(mice$ring))
lillie.test(mice$count[mice$ring==1])
print(i, shapiro.test(mice$count[mice$ring==i])$p.value)
i
shapiro.test(mice$count[mice$ring==i])$p.value
print("%d %d", &i, &shapiro.test(mice$count[mice$ring==i])$p.value)
print("%d %d", i, shapiro.test(mice$count[mice$ring==i])$p.value)
for (i in as.numeric(levels(mice$ring))) {
print(i)
print(shapiro.test(mice$count[mice$ring==i])$p.value)
}
source('~/Documents/MousePaper/mouse.r')
iter = 1000000
cores=detectCores()
start_time <- Sys.time()
cl <- makeCluster(cores-1)
registerDoParallel(cl)
Catches <- rep(0, times = 64)
Catches <- matrix(Catches, nrow = 8, ncol = 8)
Catches <- foreach(i=1:iter, .combine = '+') %dopar% {
tmp <- matrixSim()
tmp
}
stopCluster(cl)
Sys.time() - start_time
library("MASS", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
write.matrix(Catches, file = "/Users/abarbehenn/Documents/MousePaper/CatchesMatrix_1000000.csv", sep = ",")
test = read.csv(file = "/Users/abarbehenn/Documents/MousePaper/CatchesMatrix_1000000.csv")
View(test)
test = read.csv(file = "/Users/abarbehenn/Documents/MousePaper/CatchesMatrix_1000000.csv", col.names = FALSE)
as.matrix(test)
?write.matrix
test = read.csv(file = "/Users/abarbehenn/Documents/MousePaper/CatchesMatrix_1000000.csv", header = FALSE)
as.matrix(test)
r <- raster(xmn = 0, xmx = 8, ymn = 0, ymx = 8, nrows = 8, ncols = 8)
r[] <- Catches
plot(r)
Catches
r <- raster(xmn = 0, xmx = 8, ymn = 0, ymx = 8, nrows = 8, ncols = 8)
r[] <- Catches
plot(r)
Catches
mice <- melt(Catches)
names(mice) <- c("row", "col", "count")
mice$ring <- factor(rings)
rings <- c(4,4,4,4,4,4,4,4,
4,3,3,3,3,3,3,4,
4,3,2,2,2,2,3,4,
4,3,2,1,1,2,3,4,
4,3,2,1,1,2,3,4,
4,3,2,2,2,2,3,4,
4,3,3,3,3,3,3,4,
4,4,4,4,4,4,4,4)
mice <- melt(Catches)
names(mice) <- c("row", "col", "count")
mice$ring <- factor(rings)
plt <- ggplot(data = mice) + geom_density(mapping = aes(x=count, colour=ring))
plt
plt <- ggplot(data = mice[mice$ring!=4]) + geom_density(mapping = aes(x=count, colour=ring))
plt
tmp <- mice[mice$ring!=4]
tmp <- mice[mice$ring!=4,]
View(tmp)
plt <- ggplot(data = mice[mice$ring!=4,]) + geom_density(mapping = aes(x=count, colour=ring))
plt
plt <- ggplot(data = mice[mice$ring<3,]) + geom_density(mapping = aes(x=count, colour=ring))
plt
plt <- ggplot(data = mice[as.numeric(mice$ring)<3,]) + geom_density(mapping = aes(x=count, colour=ring))
plt
mice$count[mice$ring==1]
plt <- ggplot(data = mice) + geom_density(mapping = aes(x=count, colour=ring))
plt
qqnorm(mice$count[mice$ring==1])
qqline(mice$count[mice$ring==1], col=2)
shapiro.test(mice$count[mice$ring==1]) #Null: dist is normal
qqnorm(mice$count[mice$ring==2])
qqline(mice$count[mice$ring==2], col=2)
shapiro.test(mice$count[mice$ring==2]) #Null: dist is normal
lillie.test(mice$count[mice$ring==2]) #Null: dist is normal (must be more than 4 samples)
qqnorm(mice$count[mice$ring==3])
qqline(mice$count[mice$ring==3], col=2)
shapiro.test(mice$count[mice$ring==3]) #Null: dist is normal
lillie.test(mice$count[mice$ring==3]) #Null: dist is normal
qqnorm(mice$count[mice$ring==4])
qqline(mice$count[mice$ring==4], col=2)
shapiro.test(mice$count[mice$ring==4]) #Null: dist is normal
lillie.test(mice$count[mice$ring==4]) #Null: dist is normal
model <- aov(formula = count~ring, data = mice)
pval <- summary(model)[[1]]$`Pr(>F)`[1]
if (pval) {
model <- TukeyHSD(model)
#comparisons labels(model$ring)
}
for (i in as.numeric(levels(mice$ring))) {
print(i)
print(shapiro.test(mice$count[mice$ring==i])$p.value)
}
tmp <- lillie.test(mice$count[mice$ring==2])
tmo
tmp
str(tmp)
tmp$p.value
for (i in as.numeric(levels(mice$ring))) {
print(i)
print(shapiro.test(mice$count[mice$ring==i])$p.value)
print(lillie.test(mice$count[mice$ring==i])$p.value)
}
for (i in as.numeric(levels(mice$ring))) {
print(i)
print(shapiro.test(mice$count[mice$ring==i])$p.value)
}
for (i in as.numeric(levels(mice$ring))) {
print(i)
print(shapiro.test(mice$count[mice$ring==i])$p.value)
if (length(mice$count[mice$ring==i])>4) {
print(lillie.test(mice$count[mice$ring==i])$p.value)
}
}
source('~/Documents/MousePaper/mouse.r')
test = read.csv(file = "/Users/abarbehenn/Documents/MousePaper/CatchesMatrix_1000000.csv", header = FALSE)
test = as.matrix(test)
catches <- test
catches
r <- raster(xmn = 0, xmx = 8, ymn = 0, ymx = 8, nrows = 8, ncols = 8)
r[] <- Catches
plot(r)
library(doParallel)
library(foreach)
library(raster)
library(reshape2)
library(ggplot2)
library(nortest)
install.packages("raster")
install.packages("nortest")
install.packages("doParallel")
install.packages("foreach")
library(doParallel)
library(foreach)
library(raster)
library(reshape2)
library(ggplot2)
library(nortest)
restart
restart()
library(foreach)
library(doParallel)
library(raster)
library(reshape2)
library(ggplot2)
library(nortest)
install.packages("raster")
install.packages("sp")
install.packages(c("data.table", "glue", "lazyeval", "lubridate", "odbc", "openssl", "pryr", "purrr", "rlang", "robustbase", "sparklyr", "tidyr", "tidyselect", "tidyverse"))
install.packages("sp")
install.packages("raster")
source('~/Documents/MousePaper/mouse.r')
library(foreach)
library(doParallel)
library(raster)
library(reshape2)
library(ggplot2)
library(nortest)
test = read.csv(file = "/Users/abarbehenn/Documents/MousePaper/CatchesMatrix_1000000.csv", header = FALSE)
test = as.matrix(test)
Catches <- test
rings <- c(4,4,4,4,4,4,4,4,
4,3,3,3,3,3,3,4,
4,3,2,2,2,2,3,4,
4,3,2,1,1,2,3,4,
4,3,2,1,1,2,3,4,
4,3,2,2,2,2,3,4,
4,3,3,3,3,3,3,4,
4,4,4,4,4,4,4,4)
mice <- melt(Catches)
names(mice) <- c("row", "col", "count")
mice$ring <- factor(rings)
plt <- ggplot(data = mice) + geom_density(mapping = aes(x=count, colour=ring))
plt
plt <- ggplot(data = mice[mice$ring==1]) + geom_density(mapping = aes(x=count, colour=ring))
plt
density(mice$count[mice$ring==1])
plot(density(mice$count[mice$ring==1]))
plot(density(mice$count[mice$ring==2]))
plot(density(mice$count[mice$ring==3]))
groups <- c(7,6,5,5,5,5,6,7,
6,4,3,3,3,3,4,6,
5,3,2,2,2,2,3,5,
5,3,2,1,1,2,3,5,
5,3,2,1,1,2,3,5,
5,3,2,2,2,2,3,5,
6,4,3,3,3,3,4,6,
7,6,5,5,5,5,6,7)
matrix(groups, nrow = 8)
for (i in as.numeric(levels(mice$ring))) {
print(i)
print(shapiro.test(mice$count[mice$ring==i])$p.value)
if (length(mice$count[mice$ring==i])>4) {
print(lillie.test(mice$count[mice$ring==i])$p.value)
}
}
mice$group <- factor(groups)
# The groups all seem normally distributed
for (i in as.numeric(levels(mice$group))) {
print(i)
print(shapiro.test(mice$count[mice$group==i])$p.value)
if (length(mice$count[mice$group==i])>4) {
print(lillie.test(mice$count[mice$group==i])$p.value)
}
}
plot(density(mice$count[mice$group==3]))
hist(mice$count[mice$group==3])
r <- raster(xmn = 0, xmx = 8, ymn = 0, ymx = 8, nrows = 8, ncols = 8)
r[] <- Catches
plot(r)
